name: Modify Framework and Services

on:
  workflow_dispatch:
    inputs:
      # framework_jar_url:
        # description: 'URL to download framework.jar'
        # required: true
      # services_jar_url:
        # description: 'URL to download services.jar'
        # required: true
      android_api_level:
        description: 'Android API level'
        required: true
        default: '34'
      custom_device_name:
        description: 'Custom device name (optional)'
        required: true
        default: 'default_device'
      custom_version:
        description: 'Custom version (optional)'
        required: true
        default: 'default_version'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      actions: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt full-upgrade -y
        sudo apt install -y default-jdk zipalign 7zip python3

    # - name: Download framework.jar
      # run: |
        # curl -L -o framework.jar "${{ github.event.inputs.framework_jar_url }}"

    # - name: Download services.jar
      # run: |
        # curl -L -o services.jar "${{ github.event.inputs.services_jar_url }}"

    - name: Verify framework.jar
      run: |
        if [ -f framework.jar ]; then
            file framework.jar
            hexdump -C framework.jar | head -n 10
        fi

    - name: Verify services.jar
      run: |
        file services.jar
        hexdump -C services.jar | head -n 10

    - name: Clone smali repository
      run: git clone --depth=1 https://github.com/JesusFreke/smali.git

    - name: Build smali and baksmali
      run: |
        cd smali
        ./gradlew build

    - name: Extract framework.jar
      run: |
        if [ -f framework.jar ]; then
            7z x framework.jar -oframework
        fi
    - name: Extract services.jar
      run: 7z x services.jar -oservices

    - name: Decompile framework dex files
      run: |
        if [ -f framework.jar ]; then
            java -jar smali/baksmali/build/libs/baksmali.jar d -a ${{ github.event.inputs.android_api_level }} framework/classes.dex -o classes
            java -jar smali/baksmali/build/libs/baksmali.jar d -a ${{ github.event.inputs.android_api_level }} framework/classes2.dex -o classes2
            java -jar smali/baksmali/build/libs/baksmali.jar d -a ${{ github.event.inputs.android_api_level }} framework/classes3.dex -o classes3
            java -jar smali/baksmali/build/libs/baksmali.jar d -a ${{ github.event.inputs.android_api_level }} framework/classes4.dex -o classes4
            java -jar smali/baksmali/build/libs/baksmali.jar d -a ${{ github.event.inputs.android_api_level }} framework/classes5.dex -o classes5
            java -jar smali/baksmali/build/libs/baksmali.jar d -a ${{ github.event.inputs.android_api_level }} framework/classes6.dex -o classes6
        fi
        
    - name: Decompile services dex files
      run: |
        java -jar smali/baksmali/build/libs/baksmali.jar d -a ${{ github.event.inputs.android_api_level }} services/classes.dex -o services_classes
        java -jar smali/baksmali/build/libs/baksmali.jar d -a ${{ github.event.inputs.android_api_level }} services/classes2.dex -o services_classes2
        java -jar smali/baksmali/build/libs/baksmali.jar d -a ${{ github.event.inputs.android_api_level }} services/classes3.dex -o services_classes3

    - name: List decompiled files for debugging
      run: |
        echo "Contents of classes directory:"
        find classes
        echo "Contents of classes2 directory:"
        find classes2
        echo "Contents of classes3 directory:"
        find classes3
        echo "Contents of services_classes directory:"
        find services_classes
        echo "Contents of services_classes2 directory:"
        find services_classes2
        echo "Contents of services_classes3 directory:"
        find services_classes3

    - name: Backup smali files
      run: |
        if [ -f framework.jar ]; then
            cp -r classes classes_backup
            cp -r classes2 classes2_backup
            cp -r classes3 classes3_backup
        fi
        cp -r services_classes services_classes_backup
        cp -r services_classes2 services_classes2_backup
        cp -r services_classes3 services_classes3_backup

    - name: Modify framework smali files
      run: |
        if [ -f framework.jar ]; then
            python3 framework_patch.py
        fi
        
    - name: Modify services smali files
      run: |
        python3 services_patch.py

    - name: Recompile framework dex files
      run: |
        if [ -f framework.jar ]; then
            java -jar smali/smali/build/libs/smali.jar a -a ${{ github.event.inputs.android_api_level }} classes -o framework/classes.dex
            java -jar smali/smali/build/libs/smali.jar a -a ${{ github.event.inputs.android_api_level }} classes2 -o framework/classes2.dex
            java -jar smali/smali/build/libs/smali.jar a -a ${{ github.event.inputs.android_api_level }} classes3 -o framework/classes3.dex
            java -jar smali/smali/build/libs/smali.jar a -a ${{ github.event.inputs.android_api_level }} classes4 -o framework/classes4.dex
            java -jar smali/smali/build/libs/smali.jar a -a ${{ github.event.inputs.android_api_level }} classes5 -o framework/classes5.dex
            java -jar smali/smali/build/libs/smali.jar a -a ${{ github.event.inputs.android_api_level }} classes6 -o framework/classes6.dex
        fi
    - name: Recompile services dex files
      run: |
        java -jar smali/smali/build/libs/smali.jar a -a ${{ github.event.inputs.android_api_level }} services_classes -o services/classes.dex
        java -jar smali/smali/build/libs/smali.jar a -a ${{ github.event.inputs.android_api_level }} services_classes2 -o services/classes2.dex
        java -jar smali/smali/build/libs/smali.jar a -a ${{ github.event.inputs.android_api_level }} services_classes3 -o services/classes3.dex

    - name: Recompile framework.jar
      run: |
        [ ! -f framework.jar ] && return
        cd framework
        7z a -tzip ../framework_new.zip *
        cd ..

    - name: Recompile services.jar
      run: |
        cd services
        7z a -tzip ../services_new.zip *
        cd ..

    - name: Align the zips
      run: |
        if [ -f framework.jar ]; then
            zipalign -f -p -v -z 4 framework_new.zip aligned_framework.jar
        fi
        
        zipalign -f -p -v -z 4 services_new.zip aligned_services.jar

    - name: Copy aligned jars to Magisk module
      run: |
        mkdir -p magisk_module/system/framework
        
        [ -f framework.jar ] && cp aligned_framework.jar magisk_module/system/framework/framework.jar
        cp aligned_services.jar magisk_module/system/framework/services.jar

    - name: Create Version From Link
      run: |                
        echo "version=${{ github.event.inputs.custom_version }}" >> $GITHUB_ENV       
        echo "device_name=${{ github.event.inputs.custom_device_name }}" >> $GITHUB_ENV
        
        echo "version=${version}"
        echo "device_name=${device_name}"

    - name: Zip Magisk module
      run: |
        cd magisk_module
        [ -f framework.jar ] && zip -r ../moded_framework_services_${{ env.device_name }}_${{ env.version }}.zip *
        cd ..
        mkdir -p out
        chmod +w moded_framework_services_${{ env.device_name }}_${{ env.version }}.zip
        mv moded_framework_services_${{ env.device_name }}_${{ env.version }}.zip out/

    - name: Create Release Notes
      run: |
        echo "## Release Notes" > release_notes.txt
        echo "- Built modified jars from commit ${{ github.sha }}" >> release_notes.txt
        echo "- Version: ${{ env.version }}" >> release_notes.txt
        echo "- Core patch applied: ${{ github.event.inputs.core_patch }}" >> release_notes.txt

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
          artifacts: out/*
          tag: ${{ env.version }}
          name: moded_${{ env.device_name }}_${{ env.version }}
          allowUpdates: true
          makeLatest: true
          bodyFile: release_notes.txt
          token: ${{ secrets.GITHUB_TOKEN }}
      # - name: Pack artifacts
        # uses: actions/upload-artifact@v4
        # with:
          # name: jar_all
          # compression-level: 9
          # path: out
          